{"ast":null,"code":"var _jsxFileName = \"/Users/collincollins/repos/dontbuythat/src/components/DarkModeToggle.js\",\n  _s = $RefreshSig$();\n// src/components/DarkModeToggle.js\n\nimport React, { useEffect, useState } from 'react';\nimport { SunIcon, MoonIcon } from '@heroicons/react/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DarkModeToggle() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for user's system preference on initial load\n    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      setDarkMode(storedTheme === 'dark');\n    } else {\n      setDarkMode(prefersDark);\n    }\n  }, []);\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setDarkMode(!darkMode),\n    className: \"p-2 rounded-full bg-gray-200 dark:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\",\n    \"aria-label\": \"Toggle Dark Mode\",\n    children: darkMode ? /*#__PURE__*/_jsxDEV(SunIcon, {\n      className: \"h-6 w-6 text-yellow-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MoonIcon, {\n      className: \"h-6 w-6 text-gray-800\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkModeToggle, \"jxWvogfm97D9w3+yMzVp/epPJCw=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useEffect","useState","SunIcon","MoonIcon","jsxDEV","_jsxDEV","DarkModeToggle","_s","darkMode","setDarkMode","prefersDark","window","matchMedia","matches","storedTheme","localStorage","getItem","document","documentElement","classList","add","setItem","remove","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/collincollins/repos/dontbuythat/src/components/DarkModeToggle.js"],"sourcesContent":["// src/components/DarkModeToggle.js\n\nimport React, { useEffect, useState } from 'react';\nimport { SunIcon, MoonIcon } from '@heroicons/react/outline';\n\nfunction DarkModeToggle() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for user's system preference on initial load\n    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      setDarkMode(storedTheme === 'dark');\n    } else {\n      setDarkMode(prefersDark);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [darkMode]);\n\n  return (\n    <button\n      onClick={() => setDarkMode(!darkMode)}\n      className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n      aria-label=\"Toggle Dark Mode\"\n    >\n      {darkMode ? (\n        <SunIcon className=\"h-6 w-6 text-yellow-500\" />\n      ) : (\n        <MoonIcon className=\"h-6 w-6 text-gray-800\" />\n      )}\n    </button>\n  );\n}\n\nexport default DarkModeToggle;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,WAAW,GAAGC,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAClG,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfL,WAAW,CAACK,WAAW,KAAK,MAAM,CAAC;IACrC,CAAC,MAAM;MACLL,WAAW,CAACC,WAAW,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,EAAE;MACZS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACjDP,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IACEkB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,CAACD,QAAQ,CAAE;IACtCgB,SAAS,EAAC,sHAAsH;IAChI,cAAW,kBAAkB;IAAAC,QAAA,EAE5BjB,QAAQ,gBACPH,OAAA,CAACH,OAAO;MAACsB,SAAS,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/CxB,OAAA,CAACF,QAAQ;MAACqB,SAAS,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACtB,EAAA,CArCQD,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}